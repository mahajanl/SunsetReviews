@model IEnumerable<FinalSunsetReviewsMVC.Models.Review>

@{
    ViewBag.Title = "Index";
}

<div class="row container-fluid">
    <div class="jumbotron" >
        <h1 class="reviewTitle">Reviews</h1>
        <h3 class="subtitle">from fellow sunset lovers</h3>
    </div>
</div>


<p>
    @Html.ActionLink("Review a sunset", "Create")
</p>

<div class="container-fluid">
    

    @foreach (var item in Model)
    {
        //THIS WAS ME TRYING TO make every other cell shaded
        //int cellNum = 0;

        //cellNum++;

        //if ((cellNum) % 2 == 0)
        //{

        //I WANTED THESE TO DISPLAY WITHOUT ALL THE INFO, AND IN LITTLE BOXES ACROSS THE SCREEN
        <div class="row container-fluid col-md-4">           
                <div class="caption">
                    <h3 class=blurbTitle>@Html.DisplayFor(modelItem => item.Category.Location)</h3>
                    <p class="review">Reviewer: @Html.DisplayFor(modelItem => item.ReviewerName)</p>
                    <p class="review">@Html.DisplayNameFor(model => model.ReviewDate): @Html.DisplayFor(modelItem => item.ReviewDate)</p>
                    <p class="review col-md-12">@Html.ActionLink("Details", "Details", new { id = item.ReviewID }, new { @class = "btn btn-primary", role = "button" }) </p>
                </div>
        </div>
        @*}
        else
        {
        }*@
    }
</div>
@*I WANTED TO USE NO TABLES, BUT PRESERVE ALL THE INFO IN CASE I NEEDED IT LATER. if you didn't want to see process I would delete them at the end. 
    <table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category.Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReviewerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReviewTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReviewDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReviewContent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsRecommended)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Location)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReviewerName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReviewTitle)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReviewDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReviewContent)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsRecommended)
        </td>
        <td>

    DIDN'T WANT THIS DISPLAYED ON THE INDEX EITHER
            @Html.ActionLink("Edit", "Edit", new { id=item.ReviewID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ReviewID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ReviewID })
        </td>
    </tr>
}

</table>*@
